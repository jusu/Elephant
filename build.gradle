// Things to improve:
// 1. dependancies from mavenCentral
// 2. make jar files working, currently need some more adjusting
// 3. make documentaton for build process (gradle build, gradle run + also can import as gradle project to eclipse)
// 4. put sikuli somewhere. must think how. (two projects?)
// 5. look into gradle wrapper and circleci
// Author: Harri Saar
// Last update: 2015-09-29 11pm

group = "com.pinktwins"

apply {
	plugin 'java'
	plugin 'application'
    plugin 'idea'
    plugin 'eclipse'
}

mainClassName = 'com.pinktwins.elephant.Elephant'


// we need to specify new source location, because this project does not follow conventional project structure
sourceSets {
	main {
		java {
			srcDir 'src'
		}
		resources {
			srcDir 'src'
		}
	}
	// because main is in unconventional place, then we need to make test's folder in different place as well!
	test {
		java {
			srcDir 'test'
		}
	}

}

repositories {
	mavenCentral()	
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'],exclude: ['trident.jar','PDFRenderer-0.9.1.jar'] )
	compile 'org.json:json:20141113'
	compile 'commons-codec:commons-codec:1.10'
	compile 'org.apache.commons:commons-collections4:4.0'
	compile 'commons-io:commons-io:2.4'
	compile 'org.apache.commons:commons-lang3:3.3.2'
	compile 'com.google.guava:guava:18.0'
	compile 'joda-time:joda-time:2.6'
	compile 'org.apache.lucene:lucene-analyzers-common:4.10.3'
	compile 'org.apache.lucene:lucene-core:4.10.3'
	compile 'org.apache.lucene:lucene-queryparser:4.10.3'
	compile 'org.parboiled:parboiled-core:1.1.6'
	compile 'org.parboiled:parboiled-java:1.1.6'
	compile 'org.pegdown:pegdown:1.4.2'
	compile 'org.swinglabs:pdf-renderer:1.0.5' //raised from original 0.9.1 though missing in mvn central
	compile 'org.pushingpixels:trident:1.3'
	
	runtime 'org.ow2.asm:asm-all:4.0'
	
	testCompile group:'junit', name: 'junit', version: '4.+'
}

jar { //makes executable 'fat jar' with compile- and runtime dependencies
  	manifest { 
    	attributes "Main-Class": "$mainClassName"
  	}
  	  
  	from {
              configurations.compile.collect {
                  it.isDirectory() ? it : zipTree(it)
              }
              configurations.runtime.collect {
                  it.isDirectory() ? it : zipTree(it)
              }
          }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' /*need to exclude signatures or throws java.lang.SecurityException on start
    Basically the problem is that when uber-jar is created it picks up signature files from the META-INF of the corresponding jar. */
}
